/*CFG TIAP KATA KUNCI DI PYTHON*/


/*****   Main Content *****/

START -> CONTENT
CONTENT -> CONTENT NEWLINE CONTENT | NEWLINE CONTENT | CONTENT NEWLINE | IF_CONTENT | ITERATE_CONTENT | CLASS_CONTENT | DEF_FUNC_CONTENT | ASS_OPERATION | FLOW_CONTENT | IMP_CONTENT | RAI_OP | FUNCTION | METH_CONTENT | WITH_CONTENT | PASS | STRING | LIST | DICT | VARIABLE | CONSTANT | OPERASI_CONDITIONAL | ASS_OPERATION
ITERATE_CONTENT -> FOR_CONTENT | WHILE_CONTENT | LIST | DICT | VARIABLE | CONSTANT
FLOW_CONTENT -> CONTINUE_CONTENT | BREAK_CONTENT

/**************************/


/*****   Conditional  Grammar ******/

IF -> a
ELIF -> b
ELSE -> c
IF_CONTENT -> IF_HEADER CONTENT | IF_CONTENT ELIF_CONTENT | IF_CONTENT ELSE_CONTENT
IF_HEADER -> IF OPERASI_CONDITIONAL COLON NEWLINE
ELIF_CONTENT -> ELIF_HEADER CONTENT | ELIF_CONTENT ELIF_CONTENT | ELIF_CONTENT ELSE_CONTENT
ELIF_HEADER -> ELIF COND_OPERATION COLON NEWLINE
ELSE_CONTENT -> ELSE_HEADER CONTENT
ELSE_HEADER -> ELSE COLON NEWLINE

/****************************/


/*****  Loop  Grammar  *****/
/*For Loop*/
FOR -> d
IN -> e
FOR_CONTENT -> FOR_HEADER CONTENT
FOR_HEADER -> FOR FOR_VARIABLE IN ITERABLE COLON NEWLINE 
FOR_VARIABLE -> VARIABLE | VARIABLE COMMA FOR_VARIABLE
ITERABLE -> STRING | LIST | VARIABLE | FUNCTION | METH_CONTENT | DICT

/*While Loop*/
WHILE -> f
WHILE_CONTENT -> WHILE_HEADER CONTENT
WHILE_HEADER -> WHILE OPERASI_CONDITIONAL COLON NEWLINE 

/*Etc*/

/****************/

/**** Pass Grammar ****/
PASS -> g




/**********************/


/****** Class Grammar *****/







/**************************/



/*****    Import  Grammar   *****/

IMP_OPERATION -> FROM IMP_CONTENT IMPORT IMPT_MOD | IMPORT IMP_CONTENT | IMPORT AS_BLOCK
AS_BLOCK -> AS_BLOCK COMMA AS_BLOCK | IMP_CONTENT AS NAME
IMP_CONTENT -> IMP_CONTENT DOT IMP_CONTENT | NAME
IMPT_MOD -> NAME | ALL | AS_BLOCK | IMPT_MOD COMMA IMPT_MOD
ALL -> *
AS -> h
IMPORT -> i
FROM -> j



/************************/

/*****    And, Or, Not Grammar  *****/

OR -> k
NOT -> l


/******************************/


/********** True, False, None Grammar ********/




/*********************************************/

/******  Def Function Grammar *******/

//Def function
DEF -> m
DEF_FUNC_CONTENT -> DEF_FUNC_HEADER DEF_FUNC_BODY
DEF_FUNC_HEADER -> DEF NAME NRM_BKT_OPN DEF_FUNC_PARAM NRM_BKT_CLS COLON NEWLINE | DEF NAME NRM_BKT_OPN NRM_BKT_CLS COLON NEWLINE
DEF_FUNC_BODY -> DEF_FUNC_BODY NEWLINE DEF_FUNC_BODY | CONTENT_FUNC
DEF_FUNC_RETURN -> RETURN ART_OPERATION | RETURN COND_OPERATION | RETURN DEF_FUNC_RETURN_VAL | RETURN
DEF_FUNC_RETURN_VAL -> METH_CONTENT | FUNCTION | VARIABLE | LIST | STRING | DICT | CONSTANT | NONE
DEF_FUNC_PARAM -> DEF_FUNC_PARAM COMMA DEF_FUNC_PARAM | NAME

RETURN -> n

// Content



// Conditional in function 

IF_CONTENT_FUNC -> IF_HEADER CONTENT_FUNC | IF_CONTENT_FUNC ELIF_CONTENT_FUNC | IF_CONTENT_FUNC ELSE_CONTENT_FUNC
ELIF_CONTENT_FUNC -> ELIF_HEADER CONTENT_FUNC | ELIF_CONTENT_FUNC ELIF_CONTENT_FUNC | ELIF_CONTENT_FUNC ELSE_CONTENT_FUNC
ELSE_CONTENT_FUNC -> ELSE_HEADER CONTENT_FUNC

// Loop in function
// For Loop

// While Loop

// Continue and break

// With in function 

/************************************/


/***** With Grammar *****/

WITH_CONTENT -> WITH_HEADER CONTENT
WITH_HEADER -> WITH WITH_ST AS VARIABLE COLON NEWLINE
WITH_ST -> FUNCTION | METH_CONTENT_FUNC
WITH -> A

/************************/

/***** Conditional Operation Grammar *******/



/*******************************************/

/***** Assignment Operation Grammar *******/



/*******************************************/

/***** Arithmetic Operation Grammar *******/



/*******************************************/


/******** Atom Grammar *******/
//Variable

//Name

//Number


/*****************************/


/******* Function and Method Grammar *******/
//Function 


//Method



/*******************************************/

/******** String, List, Dictionary ********/
//String


//Dict


//List


/****************************************/

/************* Raise Grammar ************/

RAI_OP -> RAISE RAI_BODY
RAI_BODY -> NRM_BKT_OPN RAI_BODY NRM_BKT_CLS | VARIABLE | CONSTANT | COND_OPERATION | ART_OPERATION | METH_CONTENT | FUNCTION | LIST | STRING | DICT | NONE
RAISE -> p

/****************************************/

/**** Symbol ****/

QUOTE -> '
QQUOTE -> "
COLON -> :
COMMA -> ,
DOT -> .
PLUS -> +
MINUS -> -
MULTIPLY -> *
NEWLINE -> NEWLINE NEWLINE | __new_line__
SPACE -> SPACE SPACE | __space__
OR_SYMBOL -> __or_symbol__
RELATION_OP -> = = | ! = | < = | > = | < | > | IS 
ASS_OPERATION -> = | + = | - = | * = | * * = | / = | / / = | % = 
ARITH_OP -> + | - | * | * * | / | / / | %
LOGIC_OP -> AND | OR
MEMBER_OP -> IN | NOT SPACE IN
IDN_OP -> IS | IS SPACE NOT
BIT_OP -> & | OR_SYMBOL | ^ | > > | < < | ~\
SQUARE_BRAKET_OPN -> [
SQUARE_BRAKET_CLS -> ]
CIRCLE_BRAKET_OPN -> {
CIRCLE_BRAKET_CLS -> }
NRM_BRAKET_OPN -> (
NRM_BRAKET_CLS -> )

/***********************************/
